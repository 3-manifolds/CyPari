# https://ci.appveyor.com/project/culler/cypari-mac

image: macOS

branches:
  only:
    - current_pari

environment:
  matrix:
    - VENV: /Users/appveyor/venv3.8.2
      PYTHONPREFIX: /Users/appveyor/python38
      PYTHONPATH:  /Users/appveyor/python38/lib/python3.8/site-packages
    - VENV: /Users/appveyor/venv3.7.5
      PYTHONPREFIX: /Users/appveyor/python37
      PYTHONPATH: /Users/appveyor/python37/lib/python3.7/site-packages
    - VENV: /Users/appveyor/venv3.6.10
      PYTHONPREFIX: /Users/appveyor/python36
      PYTHONPATH: /Users/appveyor/python36/lib/python3.6/site-packages
    - VENV: /Users/appveyor/venv3.5.9
      PYTHONPREFIX: /Users/appveyor/python35
      PYTHONPATH: /Users/appveyor/python35/lib/python3.5/site-packages

install:
  # Print some environment info
  - sh: echo $APPVEYOR_BUILD_WORKER_IMAGE
  - sh: pwd
  - sh: ls /Users/appveyor
  - sh: mkdir $PYTHONPREFIX
  - sh: export PATH=$PYTHONPREFIX/bin:$PATH

  # Activate a virtualenv
  - sh: source $VENV/bin/activate

  # Install required python packages
  - python -m pip install --prefix=$PYTHONPREFIX cython
  - sh: which cython || true
  - sh: ls $PYTHONPREFIX
  - sh: ls $PYTHONPATH
  - sh: python -c "import Cython ; print(dir(Cython))"

  # Build CyPari.
  - sh: python setup.py build

build:
  none

test_script:
  - sh: python setup.py test
  
after_test:
  - sh: ls /Users/appveyor/projects/cypari-macos/libcache
  - sh: python setup.py bdist_wheel

artifacts:
  - path: dist/*.whl

cache:
  - /Users/appveyor/projects/cypari-macos/libcache

# on_success:
#   You can use this step to upload your artifacts to a public website.
#   See Appveyor's documentation for more details. Or you can simply
#   access your wheels from the Appveyor "artifacts" tab for your build.
